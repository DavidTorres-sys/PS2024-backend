package persistence.entities;

import java.sql.Timestamp;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;

/**
 * The Segment class represents a road segment in the system.
 * It includes details such as the segment number, nomenclature, length,
 * and timestamps for creation and last update.
 *
 * This entity is mapped to the "SEGMENT" table in the database.
 */
@Data
@NoArgsConstructor
@Entity
@Table(name = "segment")
public class Segment {

    /**
     * The unique identifier for the segment.
     * It is auto-generated by the database and serves as the primary key of the "SEGMENT" table.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Integer id;

    /**
     * The number assigned to the segment.
     * It is stored in the "segment_number" column of the "SEGMENT" table.
     */
    @NonNull
    @Column(name = "segment_number", unique = true, nullable = false)
    private Long segmentNumber;

    /**
     * The nomenclature or designation for the segment.
     * It is stored as a string in the "nomenclature" column in the "SEGMENT" table.
     */
    @NonNull
    @Column(name = "nomenclature", nullable = false)
    private String nomenclature;

    /**
     * The length of the segment.
     * It is stored as a float in the "length" column in the "SEGMENT" table.
     */
    @NonNull
    @Column(name = "length", nullable = false)
    private Float length;

    /**
     * The timestamp indicating when the segment was created.
     * It is stored in the "created_at" column in the "SEGMENT" table.
     */
    @NonNull
    @Column(name = "created_at", nullable = false)
    private Timestamp createdAt;

    /**
     * The timestamp indicating when the segment was last updated.
     * It is stored in the "updated_at" column in the "SEGMENT" table.
     */
    @NonNull
    @Column(name = "updated_at", nullable = false)
    private Timestamp updatedAt;

    /**
     * A list of Road objects associated with the segment.
     * This relationship is mapped using the "segment_id" foreign key in the "ROAD" table.
     * The `FetchType.EAGER` indicates that the associated road objects are eagerly loaded
     * with the segment.
     */
    @OneToMany(mappedBy = "segment", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<Road> road;

    /**
     * A list of Curb objects associated with the segment.
     * This relationship is mapped using the "segment_id" foreign key in the "CURB" table.
     */
    @OneToMany(mappedBy = "segment", fetch = FetchType.EAGER, cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<Curb> curb;

}
